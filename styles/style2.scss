$drawerWidth: 220px; 
$drawerColor: rgb(50,50,50);
$textColor: rgb(56, 49, 49);
$backgroundColor: rgb(255, 250, 246);
$drawerTextColor: rgb(200,200,200); 
$drawerBackgroundColor: rgb(100,100,100); 
$listBackgroundColor: rgba(100,100,100,0.2);
$borderRadius: 7px;    
$standardWidth: 70vw; 
$boldTextColor: rgb(0,0,0);
$headerHeight: 8vh; 
$headerFontSize: 5vh; 

body {
    margin: 0px; 
    line-height: 1.5;
    font-family: roboto, sans-serif;
    padding: 0px;
    background-color: $backgroundColor;
    scroll-behavior: smooth;
    // font-weight: 600;
    scroll-behavior: smooth;

}

button {
    outline: none;  
}

#sideDrawer {
    background-color: $drawerBackgroundColor;
    position: fixed; 
    margin: 0px; 
    // top: 0px; 
    height: 100vh - $headerHeight; 
    width: 0px;
    transition: all 0.1s ease-in, height 0s; 
    
    display: flex; 
    flex-flow: column;
    // justify-content: space-evenly;
    overflow-x: hidden; 
    overflow-y: auto;

    z-index: 2; 
    #closeMenuButton {
        visibility: hidden;
    }

    .drawerItem {
        color: $drawerTextColor;
        visibility: hidden;
        width: 0px; 
    }
}

#sideDrawer.active {
    position: fixed; 
    top: $headerHeight; 
    transition: 0.2s ease-out; 
    width: $drawerWidth;
    
    #closeMenuButton {
        visibility: visible;
    }

    .drawerItem {
        visibility: visible;
        width: $drawerWidth; 
    }    
}

// prevent scrolling on main div while menu is open 
#sideDrawer.active ~ #mainWrapper {

    // height: 100vh - $headerHeight;
}

.drawerItem {
    margin: 5px; 
    font-size: 1.2rem;  
    text-decoration: none;
}


#mainTitle, #toggler {
    max-height: $headerHeight;
    text-align: center; 
    margin: auto; 
    color: $drawerTextColor;
    font-size: 3vh;
} 

#toggler {
    outline: none; 
    // width: $headerHeight * 0.5;
    background-color: $drawerBackgroundColor;
    color: $drawerTextColor;
    border: none;
    margin: 5px; 
    text-shadow: none;
    svg {
        transform: scale(2);    
        // color: blue;
        fill: $drawerTextColor;
    }
}

#mainTitle{ 
    height: $headerHeight;
    width: 100%;
    position: fixed;
    top: 0px; 
    left: 0px; 
    font-size: 3vh;
    background: $drawerBackgroundColor; 
    margin: 0px; 
    display: flex;
    z-index: 2;  
}



#mainTitle h1 {
    font-size: $headerFontSize;
    text-align: left;
    margin: 0; 
    // text-align: center;
    /* display: inline-block; */
    /* add padding to the right to make up for the width of the menu button */
    /* padding-right: $headerHeight); */
}

main {
    padding: 10px;
    // background-color: $backgroundColor;
    color: $textColor;
    height: 100%; 
    margin: auto;
    margin-top: $headerHeight;
    width: $standardWidth;
}

article {
    // max-width: $standardWidth;
    margin: auto;
    // try adding columns back in at some point 
    // columns: 300px 3;
}

h2 {
    font-size: 3rem;
    margin-bottom: 0px;
    padding-bottom: 0px;
    text-align: center;
    // adding the following top padding and margin to allow for the anchor to scroll to this item and account for the height of the title 
    // padding-top: $headerHeight;
    // margin-top: $headerHeight;
}

h2:before {
    display: block;
    content:"";
    height: 0;
    margin: auto; 
    margin-top: 0.9 * $headerHeight;
    margin-bottom: 0.9 * $headerHeight;
    border-top: 0.5px solid $textColor; 
    width: 70%; 
    transform: translateY(1rem);
}

#reactionsList {
    margin: auto;
    width: 50%;
    padding: 0px;
}

#reactionsList li {
    font-size: 1.5rem;
    list-style: none;
    padding: 10px;
    border-radius: $borderRadius;
    max-width: 200px; 
    margin: auto;
    text-align: center;
}

#reactionsList li.highlighted {
    // border-bottom: 3px solid blue;
    color: $drawerTextColor;
    background-color: $drawerBackgroundColor;
}


#spellList {
    margin: auto; 
}

.spells {
    padding: 5px; 
    display: flex; 
    flex-flow: column wrap; 
    align-content: center;
    /* min and max height of the spells list states that 
    the min height should hold about 30 spells in a column 
    and at max it should hold about 50 
    */
    min-height: calc(50px * 30);
    max-height: calc(50px * 50);
    // column-span: all;
    & div {
        margin: 2px;
        padding: 3px;
        /* spells cannot grow (0), they can shrink (1) */
        flex: 0 1 0;
        max-width: 30vw;
    }
    
    & div:nth-child(2n){
        background: $listBackgroundColor;
    }

    & span:nth-child(1){
        font-weight: bold;
        font-style: italic;
    }
    
}

#spellGenerator {
    max-width: 300px; 
    height: 150px; 
    border: 3px solid $textColor;
    border-radius: 7px; 
    margin: 5px auto; 
    padding: 10px; 
    text-align: center; 
}

#spellGeneratorName {
    margin: 0px auto; 
}

.generatorButton {
    margin: 5px auto; 
    display: flex; 
    font-size: 1.5rem;    
    background-color: $listBackgroundColor;
    color: $textColor; 
    border: none; 
    border-radius: 7px; 
    padding: 5px;

}
#spellGeneratorButton.active {
    background-color: grey;
}

@media (max-width: 1080px){
    .spells {
        flex-flow: column;
        max-height: none; 
        max-width: 90vw;
        & div {
            max-width: 100%;
        }
    }
}

@media (max-width: 600px){
    main {
        width: 90%; 
    }
}

/* mobile media query */
@media (max-height: 700px), (max-width: 900px){
    $standardWidth: 90vw;
    main {
        width: 90vw;
    }
    #spellList {
        /* if the screen isn't tall enough, make the spell list scrollable */
        border: 3px solid $textColor; 
        border-radius: $borderRadius;
        /* float: right;  */
        max-width: 90vw;
        max-height: 95vh; 
        overflow-y: scroll;
    }
    #spellGenerator {
        max-width: 90vw;
    }
    #reactionsList {
        width: 100%;
    }
}

// touch elements styling 
#touchElement {
    width: 100%; 
    height: 100%; 
    position: fixed; 
    top: 0px; 
    bottom: 0px; 
    left: 0px; 
    right: 0px; 
    z-index: -1;
}

#openDrawerElement {
    position: fixed; 
    top: 0; 
    left: 0; 
    width: 10%; 
    height: 100%; 
    background-color: blue;
    opacity: 0;
    // z-index: 2; 
}

.designerNotes {
    font-style: italic;
}